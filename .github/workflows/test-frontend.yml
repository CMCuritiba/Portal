name: Frontend CI

on:
  push:
    branches: [ "test"]
    paths:
      - "frontend/**"
      - ".github/workflows/test-frontend.yml"
  workflow_dispatch:

env:
  IMAGE_NAME_PREFIX: ${{ github.repository }}/frontend
  IMAGE_NAME_SUFFIX: test
  NODE_VERSION: 20.x

defaults:
  run:
    working-directory: ./frontend

jobs:
#
#      - name: ESLint
#        id: eslint
#        if: ${{ success() || failure() }}
#        run: yarn run lint:ci
#
#      - name: i18n sync
#        id: i18n
#        if: ${{ success() || failure() }}
#        run: make i18n-ci
#
#      - name: Unit Tests
#        id: unit
#        if: ${{ success() || failure() }}
#        run: make test
#
#      - name: Report
#        if: ${{ success() || failure() }}
#        run: |
#          echo '# Code Analysis' >> $GITHUB_STEP_SUMMARY
##          echo '| Test | Status |' >> $GITHUB_STEP_SUMMARY
#          echo '| --- | --- |' >> $GITHUB_STEP_SUMMARY
##          echo '| Prettier | ${{ steps.prettier.conclusion == 'failure' && '❌' || ' ✅' }} |' >> $GITHUB_STEP_SUMMARY
##          echo '| ESLint | ${{ steps.eslint.conclusion == 'failure' && '❌' || ' ✅' }} |' >> $GITHUB_STEP_SUMMARY
##          echo '| i18n | ${{ steps.i18n.conclusion == 'failure' && '❌' || ' ✅' }} |' >> $GITHUB_STEP_SUMMARY
#          echo '| Unit Tests | ${{ steps.unit.conclusion == 'failure' && '❌' || ' ✅' }} |' >> $GITHUB_STEP_SUMMARY


  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}/frontend
          tags: |
            type=raw,value=test
            type=raw,value=${{ needs.version.outputs.version }}
          labels: |
            org.label-schema.docker.cmd=docker run -d -p 3000:3000 ghcr.io/${{ github.repository }}/frontend:test

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64
          context: frontend/
          file: frontend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: $${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy to Remote Server
    runs-on: ubuntu-latest
    environment: test  # 👈 Isso seta o ambiente "test"
    needs: release
    steps:
      - name: Connect via SSH and deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            echo "Fazendo pull da imagem atualizada..."
            docker pull ghcr.io/cmcuritiba/portal/frontend:test

            echo "Parando e removendo containers com 'frontend' no nome da imagem..."
            for id in $(docker ps -a | grep frontend | awk '{print $1}'); do
              docker stop $id || true
            done
