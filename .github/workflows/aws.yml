# This workflow will deploy a new task definition to Amazon ECS, whenever a new
# container image is pushed from the "develop" branch.
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create a repository to store your images.
#
# 2. Create an ECS task definition, an ECS cluster, and an ECS service.
#    For example, follow the Getting Started guide on the ECS console:
#      https://us-east-2.console.aws.amazon.com/ecs/home?region=us-east-2#/firstRun
#
# 3. Store your ECS task definition as a JSON file in your repository.
#    The format should follow the output of `aws ecs register-task-definition --generate-cli-skeleton`.
#
# 4. Store an IAM user access key in GitHub Actions secrets.
#    See the documentation for each action used below for the recommended IAM
#    policies for this IAM user, and best practices on handling the access key
#    credentials.
#
# Refs:
#
# - https://docs.github.com/en/actions/use-cases-and-examples/deploying/deploying-to-amazon-elastic-container-service
# - https://github.com/marketplace/actions/amazon-ecs-deploy-task-definition-action-for-github-actions
# - https://github.com/aws-actions/amazon-ecs-deploy-task-definition
#

name: Deploy to Amazon ECS

on:
  workflow_run:
    workflows: ["Docker Build and Push"]
    branches: [ "develop" ]
    types:
      - completed

permissions:
  contents: read

env:
  ECS_TASK_DEFINITION: "task.yml"

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: develop

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_KEY }}
        aws-region: ${{ secrets.DEV_AWS_REGION }}

    - name: Create task definition
      run: |
        echo '{"forceNewDeployment": true}' >${{ env.ECS_TASK_DEFINITION }}

    - name: Deploy Backend on Amazon ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        service: ${{ secrets.DEV_ECS_SERVICE_BACKEND }}
        cluster: ${{ secrets.DEV_ECS_CLUSTER }}
        wait-for-service-stability: true

#    - name: Deploy Frontend on Amazon ECS
#      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#      with:
#        task-definition: '{"forceNewDeployment": true}'
#        service: ${{ secrets.DEV_ECS_SERVICE_FRONTEND }}
#        cluster: ${{ secrets.DEV_ECS_CLUSTER }}
#        wait-for-service-stability: true
