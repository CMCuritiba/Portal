name: Manage Tags

on:
  workflow_run:
    workflows: ["Release Frontend", "Release Backend"]
    types:
      - completed

jobs:
  update-homolog-tag:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'homolog'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get current version and timestamp
        id: version
        run: |
          # Get current version from frontend package.json
          FRONTEND_VERSION=$(jq -r '.version' frontend/package.json)
          
          # Get current timestamp
          TIMESTAMP=$(date +"%Y%m%d%H%M%S")
          
          # Create build metadata
          BUILD_NUMBER="001"
          
          echo "frontend_version=$FRONTEND_VERSION" >> $GITHUB_OUTPUT
          echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT
          echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT
          
          # Create tag with build metadata
          TAG_WITH_BUILD="${FRONTEND_VERSION}-homolog+${BUILD_NUMBER}"
          TAG_WITH_TIMESTAMP="${FRONTEND_VERSION}-homolog+${TIMESTAMP}"
          
          echo "tag_with_build=$TAG_WITH_BUILD" >> $GITHUB_OUTPUT
          echo "tag_with_timestamp=$TAG_WITH_TIMESTAMP" >> $GITHUB_OUTPUT

      - name: Update homolog tag with build metadata
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Delete existing homolog tag if it exists
          git tag -d homolog 2>/dev/null || true
          git push origin :refs/tags/homolog 2>/dev/null || true
          
          # Create new homolog tag with build metadata
          git tag homolog
          git push origin homolog
          
          # Create build metadata tags
          git tag ${{ steps.version.outputs.tag_with_build }}
          git push origin ${{ steps.version.outputs.tag_with_build }}
          
          git tag ${{ steps.version.outputs.tag_with_timestamp }}
          git push origin ${{ steps.version.outputs.tag_with_timestamp }}

  update-latest-tag:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update latest tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Delete existing latest tag if it exists
          git tag -d latest 2>/dev/null || true
          git push origin :refs/tags/latest 2>/dev/null || true
          
          # Create new latest tag pointing to current commit
          git tag latest
          git push origin latest 