name: Auto PR for Protected Branches

on:
  workflow_run:
    workflows: ["Release"]
    types:
      - completed

jobs:
  create-pr:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' && (github.event.workflow_run.head_branch == 'develop' || github.event.workflow_run.head_branch == 'main')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug workflow info
        run: |
          echo "Workflow run head branch: ${{ github.event.workflow_run.head_branch }}"
          echo "Workflow run conclusion: ${{ github.event.workflow_run.conclusion }}"
          echo "Current branch: ${{ github.ref }}"
          echo "Repository: ${{ github.repository }}"

      - name: Check for changes
        id: changes
        run: |
          # Check if there are any changes to commit
          if git diff --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected:"
            git diff --name-only
          fi

      - name: Create test file for PR
        if: steps.changes.outputs.has_changes == 'false'
        run: |
          echo "# Auto PR Test" > auto-pr-test.md
          echo "This file was created to test the auto PR functionality." >> auto-pr-test.md
          echo "Created at: $(date)" >> auto-pr-test.md

      - name: Create Pull Request
        id: pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "chore: auto-pr for ${{ github.event.workflow_run.head_branch }} [skip ci]"
          body: |
            Auto-generated PR for ${{ github.event.workflow_run.head_branch }}
            
            This PR was created automatically to handle semantic-release changes.
            
            - **Source**: ${{ github.event.workflow_run.head_branch }}
            - **Target**: ${{ github.event.workflow_run.head_branch }}
            - **Workflow**: ${{ github.event.workflow_run.name }}
            - **Run ID**: ${{ github.event.workflow_run.id }}
            
            Changes include:
            - Version updates from semantic-release
            - Changelog updates
            - Package.json updates
          branch: auto-pr-${{ github.event.workflow_run.head_branch }}-${{ github.run_id }}
          base: ${{ github.event.workflow_run.head_branch }}
          delete-branch: true
          commit-message: "chore: auto-pr changes [skip ci]"

      - name: Debug PR creation
        run: |
          echo "PR number: ${{ steps.pr.outputs.pull-request-number }}"
          echo "PR URL: ${{ steps.pr.outputs.pull-request-url }}"
          echo "PR created: ${{ steps.pr.outputs.pull-request-number != '' }}"
          echo "Has changes: ${{ steps.changes.outputs.has_changes }}"

      - name: Approve Pull Request
        if: steps.pr.outputs.pull-request-number != ''
        uses: actions/github-script@v7
        with:
          script: |
            console.log('Starting approval process...');
            
            // Add approval review
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ steps.pr.outputs.pull-request-number }},
              event: 'APPROVE',
              body: 'Auto-approved by GitHub Actions for semantic-release changes'
            });
            
            console.log(`Approved PR #${{ steps.pr.outputs.pull-request-number }}`);

      - name: Merge Pull Request
        if: steps.pr.outputs.pull-request-number != ''
        uses: actions/github-script@v7
        with:
          script: |
            console.log('Starting merge process...');
            
            // Wait a bit for the approval to be processed
            await new Promise(resolve => setTimeout(resolve, 2000));
            
            // Try to merge the PR
            try {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: ${{ steps.pr.outputs.pull-request-number }},
                merge_method: 'squash',
                commit_title: `chore: auto-merge PR #${{ steps.pr.outputs.pull-request-number }} [skip ci]`,
                commit_message: 'Auto-merged by GitHub Actions'
              });
              
              console.log(`Auto-merged PR #${{ steps.pr.outputs.pull-request-number }}`);
            } catch (error) {
              console.log('Could not auto-merge PR. It may require manual approval.');
              console.log('Error:', error.message);
            } 